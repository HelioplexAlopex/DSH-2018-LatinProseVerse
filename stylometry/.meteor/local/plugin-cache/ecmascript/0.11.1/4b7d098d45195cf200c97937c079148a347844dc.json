{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/jeff/stylometry/imports/ui/pages/sresults.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/ui/pages/sresults.js","filename":"/home/jeff/stylometry/imports/ui/pages/sresults.js","passPerPreset":false,"envName":"development","cwd":"/home/jeff/stylometry","root":"/home/jeff/stylometry","presets":[],"generatorOpts":{"filename":"/home/jeff/stylometry/imports/ui/pages/sresults.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/pages/sresults.js"}},"code":"module.watch(require(\"./sresults.html\"));\nlet csv;\nmodule.watch(require(\"to-csv\"), {\n  default(v) {\n    csv = v;\n  }\n\n}, 0);\nconst allF = [{\n  name: \"Personal Pronouns\",\n  feature: \"p1\"\n}, {\n  name: \"Demonstrative Pronouns\",\n  feature: \"p2\"\n}, {\n  name: \"Quidam\",\n  feature: \"p3\"\n}, {\n  name: \"Reflexive Pronouns\",\n  feature: \"p4\"\n}, {\n  name: \"Iste\",\n  feature: \"p5\"\n}, {\n  name: \"Alius\",\n  feature: \"n1\"\n}, {\n  name: \"Ipse\",\n  feature: \"n2\"\n}, {\n  name: \"Idem\",\n  feature: \"n3\"\n}, {\n  name: \"Priusquam\",\n  feature: \"s6\"\n}, {\n  name: \"Antequam\",\n  feature: \"s5\"\n}, {\n  name: \"Quominus\",\n  feature: \"s4\"\n}, {\n  name: \"Dum\",\n  feature: \"s7\"\n}, {\n  name: \"Quin\",\n  feature: \"s3\"\n}, {\n  name: \"Ut\",\n  feature: \"m4\"\n}, {\n  name: \"Conditionals\",\n  feature: \"s1\"\n}, {\n  name: \"Prepositions\",\n  feature: \"m7\"\n}, {\n  name: \"Conjunctions\",\n  feature: \"c1\"\n}, {\n  name: \"Atque + consonant\",\n  feature: \"c2\"\n}, {\n  name: \"Cum\",\n  feature: \"s2\"\n}, {\n  name: \"Relative Clauses\",\n  feature: \"s8\"\n}, {\n  name: \"Mean Length Relative Clauses\",\n  feature: \"s9\"\n}, {\n  name: \"Interrogative Sentences\",\n  feature: \"m1\"\n}, {\n  name: \"Vocatives\",\n  feature: \"m2\"\n}, {\n  name: \"Superlatives\",\n  feature: \"m3\"\n}, {\n  name: \"Gerunds and Gerundives\",\n  feature: \"m5\"\n}, {\n  name: \"Mean Sentence Length\",\n  feature: \"m6\"\n}];\nconst nameObject = {\n  name: \"Corpus Name\",\n  sentences: \"Sentences\",\n  words: \"Words\",\n  characters: \"Characters\",\n  p1: \"Personal Pronouns\",\n  p2: \"Demonstrative Pronouns\",\n  p3: \"Quidam\",\n  p4: \"Reflexive Pronouns\",\n  p5: \"Iste\",\n  n1: \"Alius\",\n  n2: \"Ipse\",\n  n3: \"Idem\",\n  s6: \"Priusquam\",\n  s5: \"Antequam\",\n  s4: \"Quominus\",\n  s7: \"Dum\",\n  s3: \"Quin\",\n  m4: \"Ut\",\n  s1: \"Conditionals\",\n  m7: \"Prepositions\",\n  c1: \"Conjunctions\",\n  c2: \"Atque + consonant\",\n  s2: \"Cum\",\n  s8: \"Relative Clauses\",\n  s9: \"Mean Length Relative Clauses\",\n  m1: \"Interrogative Sentences\",\n  m2: \"Vocatives\",\n  m3: \"Superlatives\",\n  m5: \"Gerunds and Gerundives\",\n  m6: \"Mean Sentence Length\",\n  type: \"Type\"\n};\n\nconst renameObject = o => Object.assign(...Object.keys(o).map(k => ({\n  [nameObject[k] || k]: o[k]\n})));\n\nconst hexToRGB = (hex, alpha) => {\n  const r = parseInt(hex.slice(1, 3), 16),\n        g = parseInt(hex.slice(3, 5), 16),\n        b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  } else {\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n};\n\nconst htmlLabels = () => {\n  let dy = [];\n  const featureLength = allF.length;\n  const featureArray = Session.get(\"features\");\n\n  for (let i = 0; i < fl; i++) {\n    let col = {};\n\n    if (farray.includes(allF[i].feature)) {\n      col.header = allF[i].name;\n      col.description = allF[i].name;\n      col.feature = allF[i].feature;\n      dy.push(col);\n    }\n  }\n\n  return dy;\n};\n\nconst scatterColors = [\"#702c39\", \"#b7c1c3\", \"#702c39\", \"#868e96\", \"#6610f2\"];\n\nconst generateCompareData = data => {\n  const results = Session.get(\"styloresult\");\n  const feature1 = data[0];\n  const feature2 = data[1];\n  let sData = [];\n\n  for (let i = 0; i < results.length; i++) {\n    let col = {};\n    col.label = results[i].name;\n    col.backgroundColor = hexToRGB(scatterColors[i], 0.85);\n    col.data = [{\n      x: results[i][feature1],\n      y: results[i][feature2],\n      r: 10\n    }];\n    col.hoverBackgroundColor = \"#007bff\";\n    sData.push(col);\n  }\n\n  return sData;\n};\n\nconst generateScatterChart = (element, data) => {\n  let mychart = document.getElementById(\"scatterChart\").getContext(\"2d\");\n  const bbdata = {\n    datasets: data\n  };\n  module.dynamicImport(\"chart.js\").then(({\n    default: Chart\n  }) => {\n    new Chart(mychart, {\n      type: \"bubble\",\n      data: bbdata,\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              labelString: Session.get(\"compareLabels\")[1],\n              display: true\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              labelString: Session.get(\"compareLabels\")[0],\n              display: true\n            },\n            ticks: {\n              beginAtZero: true,\n              steps: 0.1,\n              stepValue: 0.05\n            }\n          }]\n        }\n      }\n    });\n  });\n};\n\nTemplate.sresults.events({\n  \"click #graphs\"(event) {\n    event.preventDefault();\n    const controller = Iron.controller();\n    controller.render(\"stylometrygraph\", {\n      to: \"stylooption\"\n    });\n    $(\"#graphs\").hide();\n    $(\"#table\").show();\n  },\n\n  \"click .saveResult\"(event) {\n    $(\"#exportModal\").modal(\"show\");\n  },\n\n  \"click #closeExportModal\"(event) {\n    document.getElementById(\"saveResultForm\").reset();\n    $(\"#exportModal\").modal(\"hide\");\n  },\n\n  \"click #exportResult\"(event, template) {\n    event.preventDefault();\n    const target = event.target;\n    const fileName = $(\"#fileName\").val();\n    const analysisResults = Session.get(\"styloresult\");\n    const data = analysisResults.map(renameObject);\n    const csvString = csv(data);\n\n    if (window.navigator.msSaveOrOpenBlob) {\n      const blob = new Blob([csvString]);\n      window.navigator.msSaveOrOpenBlob(blob, fileName + \".csv\");\n    } else {\n      let a = document.createElement(\"a\");\n      a.href = \"data:attachment/csv,\" + encodeURIComponent(csvString);\n      a.target = \"_blank\";\n      a.download = fileName + \".csv\";\n      document.body.appendChild(a);\n      a.click();\n    }\n\n    document.getElementById(\"saveResultForm\").reset();\n    $(\"#exportModal\").modal(\"hide\");\n  },\n\n  \"click #table\"(event) {\n    event.preventDefault();\n    const controller = Iron.controller();\n    controller.render(\"stylometrytable\", {\n      to: \"stylooption\"\n    });\n    $(\"#table\").hide();\n    $(\"#graphs\").show();\n  },\n\n  \"click #compare\"(event) {\n    event.preventDefault();\n    const controller = Iron.controller();\n    controller.render(\"compareFeatures\", {\n      to: \"stylooption\"\n    });\n    $(\"#table\").show();\n  },\n\n  \"click .newsearch\"(event, template) {\n    Session.set(\"styloresult\", null);\n    $(\"#stable\").empty();\n    Router.go(\"/stylometry\");\n  }\n\n});\nTemplate.compareFeatures.events({\n  \"submit #compareFeaturesForm\"(event, template) {\n    event.preventDefault();\n    const target = event.target;\n    let selectedFeatures = [];\n    let frequencyLength = allF.length;\n    selectedFeatures.push(target.feature1.value);\n    selectedFeatures.push(target.feature2.value);\n    $(\"#compareSelect\").hide();\n    $(\"#compareView\").show();\n    let compareNames = [];\n\n    for (let b = 0; b < frequencyLength; b++) {\n      if (selectedFeatures.includes(allF[b].feature)) {\n        compareNames.push(allF[b].name);\n      }\n    }\n\n    Session.set(\"compareLabels\", compareNames);\n    let compareData = generateCompareData(selectedFeatures);\n    generateScatterChart(\"#scatterChart\", compareData);\n  }\n\n});\nTemplate.compareFeatures.onRendered(function () {\n  $(\".select2\").select2({\n    minimumResultsForSearch: 2,\n    width: \"100%\",\n    placeholder: \"Select Feature\",\n    matcher: function (term, text) {\n      return text.toUpperCase().indexOf(term.toUpperCase()) == 0;\n    }\n  });\n  $(\".select2[name=feature1]\").on(\"change\", function (e) {\n    const thisVal = $(this).val();\n    $(\".select2[name=feature2] option\").each(function () {\n      if (thisVal == $(this).attr(\"value\")) {\n        $(this).attr(\"disabled\", \"disabled\");\n      } else {\n        $(this).removeAttr(\"disabled\");\n      }\n    });\n  });\n  $(\".select2[name=feature2]\").on(\"change\", function (e) {\n    const thisVal = $(this).val();\n    $(\".select2[name=feature1] option\").each(function () {\n      if (thisVal == $(this).attr(\"value\")) {\n        $(this).attr(\"disabled\", \"disabled\");\n      } else {\n        $(this).removeAttr(\"disabled\");\n      }\n    });\n  });\n});\nTemplate.stylometrygraph.onRendered(function () {\n  $(\".toplevel\").fadeIn(\"slow\");\n  const featureArray = Session.get(\"features\");\n  const data = Session.get(\"styloresult\");\n  const cdata = data;\n  const f1label = cdata.map(function (x) {\n    return x.name;\n  });\n  const fl = allF.length;\n\n  const generateData = feature => {\n    const dydata = cdata.map(function (x) {\n      return x[feature];\n    });\n    let bdata = [];\n\n    for (let i = 0; i < cdata.length; i++) {\n      let col = {};\n      col.label = cdata[i].name;\n      col.data = [dydata[i]];\n      col.fill = true;\n      col.borderWidth = 2;\n      col.backgroundColor = \"rgba(112,44,57,0.4)\";\n      col.borderColor = \"#702c39\";\n      bdata.push(col);\n    }\n\n    return bdata;\n  };\n\n  let dynamicCharts = [];\n\n  for (let b = 0; b < fl; b++) {\n    let ch = {};\n\n    if (farray.includes(allF[b].feature)) {\n      ch.data = allF[b].feature;\n      ch.title = allF[b].name;\n      dynamicCharts.push(ch);\n    }\n  }\n\n  farray.forEach(function (x) {\n    generateBarChart(\"#\" + x, f1label, generateData(x));\n  });\n\n  function generateBarChart(element, labels, data) {\n    const mychart = $(element);\n    const bbdata = {\n      labels: labels,\n      datasets: data\n    };\n    module.dynamicImport(\"chart.js\").then(({\n      default: Chart\n    }) => {\n      new Chart(mychart, {\n        type: \"bar\",\n        data: bbdata,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [{\n              barPercentage: 0.4,\n              categoryPercentage: 1\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          legend: {\n            display: false\n          },\n          tooltips: {\n            callbacks: {\n              title: function () {}\n            }\n          }\n        }\n      });\n    });\n  }\n});\nTemplate.stylometrytable.onRendered(function () {\n  $(\".toplevel\").fadeIn(\"slow\");\n  const farray = Session.get(\"features\");\n  let dynamicColumns = [{\n    data: \"name\",\n    title: \"Corpus\"\n  }, {\n    data: \"words\",\n    title: \"Words\"\n  }, {\n    data: \"characters\",\n    title: \"Characters\"\n  }, {\n    data: \"type\",\n    title: \"Type\"\n  }];\n  const fl = allF.length;\n\n  for (let i = 0; i < fl; i++) {\n    let col = {};\n\n    if (farray.includes(allF[i].feature)) {\n      col.data = allF[i].feature;\n      col.title = allF[i].name;\n      dynamicColumns.push(col);\n    }\n  }\n\n  const data = Session.get(\"styloresult\");\n  const cdata = data;\n  let container = document.getElementById(\"stable\");\n  module.dynamicImport(\"../hands.js\").then(({\n    default: Handsontable\n  }) => {\n    let hot_init = new Handsontable(container, {\n      data: data,\n      columns: dynamicColumns,\n      rowHeaders: true,\n      fixedColumnsLeft: 2,\n      columnSorting: true,\n      stretchH: \"all\"\n    });\n  });\n});\nTemplate.stylometrygraph.helpers({\n  nocharts() {\n    return htmlLabels();\n  }\n\n});\nTemplate.compareFeatures.helpers({\n  comparefeatures() {\n    let col = [];\n    let frequencyLength = allF.length;\n    let carray = Session.get(\"features\");\n\n    for (let i = 0; i < frequencyLength; i++) {\n      let select = {};\n\n      if (carray.includes(allF[i].feature)) {\n        select.value = allF[i].feature;\n        select.name = allF[i].name;\n        col.push(select);\n      }\n    }\n\n    return col;\n  }\n\n});","map":{"version":3,"sources":["imports/ui/pages/sresults.js"],"names":["module","watch","require","csv","default","v","allF","name","feature","nameObject","sentences","words","characters","p1","p2","p3","p4","p5","n1","n2","n3","s6","s5","s4","s7","s3","m4","s1","m7","c1","c2","s2","s8","s9","m1","m2","m3","m5","m6","type","renameObject","o","Object","assign","keys","map","k","hexToRGB","hex","alpha","r","parseInt","slice","g","b","htmlLabels","dy","featureLength","length","featureArray","Session","get","i","fl","col","farray","includes","header","description","push","scatterColors","generateCompareData","data","results","feature1","feature2","sData","label","backgroundColor","x","y","hoverBackgroundColor","generateScatterChart","element","mychart","document","getElementById","getContext","bbdata","datasets","then","Chart","options","maintainAspectRatio","scales","xAxes","display","scaleLabel","labelString","ticks","beginAtZero","yAxes","steps","stepValue","Template","sresults","events","event","preventDefault","controller","Iron","render","to","$","hide","show","modal","reset","template","target","fileName","val","analysisResults","csvString","window","navigator","msSaveOrOpenBlob","blob","Blob","a","createElement","href","encodeURIComponent","download","body","appendChild","click","set","empty","Router","go","compareFeatures","selectedFeatures","frequencyLength","value","compareNames","compareData","onRendered","select2","minimumResultsForSearch","width","placeholder","matcher","term","text","toUpperCase","indexOf","on","e","thisVal","each","attr","removeAttr","stylometrygraph","fadeIn","cdata","f1label","generateData","dydata","bdata","fill","borderWidth","borderColor","dynamicCharts","ch","title","forEach","generateBarChart","labels","responsive","barPercentage","categoryPercentage","legend","tooltips","callbacks","stylometrytable","dynamicColumns","container","Handsontable","hot_init","columns","rowHeaders","fixedColumnsLeft","columnSorting","stretchH","helpers","nocharts","comparefeatures","carray","select"],"mappings":"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","sourcesContent":["import \"./sresults.html\";\nimport csv from \"to-csv\";\n\nconst allF = [\n  {name: \"Personal Pronouns\", feature: \"p1\"},\n  {name: \"Demonstrative Pronouns\", feature: \"p2\"},\n  {name: \"Quidam\", feature: \"p3\"},\n  {name: \"Reflexive Pronouns\", feature: \"p4\"},\n  {name: \"Iste\", feature: \"p5\"},\n  {name: \"Alius\", feature: \"n1\"},\n  {name: \"Ipse\", feature: \"n2\"},\n  {name: \"Idem\", feature: \"n3\"},\n  {name: \"Priusquam\", feature: \"s6\"},\n  {name: \"Antequam\", feature: \"s5\"},\n  {name: \"Quominus\", feature: \"s4\"},\n  {name: \"Dum\", feature: \"s7\"},\n  {name: \"Quin\", feature: \"s3\"},\n  {name: \"Ut\", feature: \"m4\"},\n  {name: \"Conditionals\", feature: \"s1\"},\n  {name: \"Prepositions\", feature: \"m7\"},\n  {name: \"Conjunctions\", feature: \"c1\"},\n  {name: \"Atque + consonant\", feature: \"c2\"},\n  {name: \"Cum\", feature: \"s2\"},\n  {name: \"Relative Clauses\", feature: \"s8\"},\n  {name: \"Mean Length Relative Clauses\", feature: \"s9\"},\n  {name: \"Interrogative Sentences\", feature: \"m1\"},\n  {name: \"Vocatives\", feature: \"m2\"},\n  {name: \"Superlatives\", feature: \"m3\"},\n  {name: \"Gerunds and Gerundives\", feature: \"m5\"},\n  {name: \"Mean Sentence Length\", feature: \"m6\"}\n];\n\nconst nameObject = {\n  name: \"Corpus Name\",\n  sentences: \"Sentences\",\n  words: \"Words\",\n  characters: \"Characters\",\n  p1: \"Personal Pronouns\",\n  p2: \"Demonstrative Pronouns\",\n  p3: \"Quidam\",\n  p4: \"Reflexive Pronouns\",\n  p5: \"Iste\",\n  n1: \"Alius\",\n  n2: \"Ipse\",\n  n3: \"Idem\",\n  s6: \"Priusquam\",\n  s5: \"Antequam\",\n  s4: \"Quominus\",\n  s7: \"Dum\",\n  s3: \"Quin\",\n  m4: \"Ut\",\n  s1: \"Conditionals\",\n  m7: \"Prepositions\",\n  c1: \"Conjunctions\",\n  c2: \"Atque + consonant\",\n  s2: \"Cum\",\n  s8: \"Relative Clauses\",\n  s9: \"Mean Length Relative Clauses\",\n  m1: \"Interrogative Sentences\",\n  m2: \"Vocatives\",\n  m3: \"Superlatives\",\n  m5: \"Gerunds and Gerundives\",\n  m6: \"Mean Sentence Length\",\n  type: \"Type\"\n};\n\nconst renameObject = (o) => Object.assign(...Object.keys(o).map((k) => ({[nameObject[k] || k]: o[k]})));\n\nconst hexToRGB = (hex, alpha) => {\n  const r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  } else {\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n};\n\nconst htmlLabels = () => {\n  let dy = [];\n  const featureLength = allF.length;\n  const featureArray = Session.get(\"features\");\n  for (let i = 0; i < fl; i++) {\n    let col = {};\n    if (farray.includes(allF[i].feature)) {\n      col.header = allF[i].name;\n      col.description = allF[i].name;\n      col.feature = allF[i].feature;\n      dy.push(col);\n    }\n  }\n  return dy;\n};\n\nconst scatterColors = [\"#702c39\", \"#b7c1c3\", \"#702c39\", \"#868e96\", \"#6610f2\"];\n\nconst generateCompareData = (data) => {\n  const results = Session.get(\"styloresult\");\n  const feature1 = data[0];\n  const feature2 = data[1];\n  let sData = [];\n  for (let i = 0; i < results.length; i++) {\n    let col = {};\n    col.label = results[i].name;\n    col.backgroundColor = hexToRGB(scatterColors[i], 0.85);\n    col.data = [\n      {\n        x: results[i][feature1],\n        y: results[i][feature2],\n        r: 10\n      }\n    ];\n    col.hoverBackgroundColor = \"#007bff\";\n    sData.push(col);\n  }\n  return sData;\n};\n\nconst generateScatterChart = (element, data) => {\n  let mychart = document.getElementById(\"scatterChart\").getContext(\"2d\");\n\n  const bbdata = {\n    datasets: data\n  };\n  import(\"chart.js\").then(({default: Chart}) => {\n    new Chart(mychart, {\n      type: \"bubble\",\n      data: bbdata,\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [\n            {\n              display: true,\n              scaleLabel: {\n                labelString: Session.get(\"compareLabels\")[1],\n                display: true\n              },\n\n              ticks: {\n                beginAtZero: true\n              }\n            }\n          ],\n          yAxes: [\n            {\n              display: true,\n              scaleLabel: {\n                labelString: Session.get(\"compareLabels\")[0],\n                display: true\n              },\n              ticks: {\n                beginAtZero: true,\n                steps: 0.1,\n                stepValue: 0.05\n              }\n            }\n          ]\n        }\n      }\n    });\n  });\n};\n\nTemplate.sresults.events({\n  \"click #graphs\"(event) {\n    event.preventDefault();\n    const controller = Iron.controller();\n    controller.render(\"stylometrygraph\", {to: \"stylooption\"});\n    $(\"#graphs\").hide();\n    $(\"#table\").show();\n  },\n  \"click .saveResult\"(event) {\n    $(\"#exportModal\").modal(\"show\");\n  },\n  \"click #closeExportModal\"(event) {\n    document.getElementById(\"saveResultForm\").reset();\n    $(\"#exportModal\").modal(\"hide\");\n  },\n  \"click #exportResult\"(event, template) {\n    event.preventDefault();\n    const target = event.target;\n    const fileName = $(\"#fileName\").val();\n    const analysisResults = Session.get(\"styloresult\");\n    const data = analysisResults.map(renameObject);\n    const csvString = csv(data);\n    if (window.navigator.msSaveOrOpenBlob) {\n      const blob = new Blob([csvString]);\n      window.navigator.msSaveOrOpenBlob(blob, fileName + \".csv\");\n    } else {\n      let a = document.createElement(\"a\");\n      a.href = \"data:attachment/csv,\" + encodeURIComponent(csvString);\n      a.target = \"_blank\";\n      a.download = fileName + \".csv\";\n      document.body.appendChild(a);\n      a.click();\n    }\n    document.getElementById(\"saveResultForm\").reset();\n    $(\"#exportModal\").modal(\"hide\");\n  },\n  \"click #table\"(event) {\n    event.preventDefault();\n    const controller = Iron.controller();\n    controller.render(\"stylometrytable\", {to: \"stylooption\"});\n    $(\"#table\").hide();\n    $(\"#graphs\").show();\n  },\n  \"click #compare\"(event) {\n    event.preventDefault();\n    const controller = Iron.controller();\n    controller.render(\"compareFeatures\", {to: \"stylooption\"});\n    $(\"#table\").show();\n  },\n  \"click .newsearch\"(event, template) {\n    Session.set(\"styloresult\", null);\n    $(\"#stable\").empty();\n    Router.go(\"/stylometry\");\n  }\n});\n\nTemplate.compareFeatures.events({\n  \"submit #compareFeaturesForm\"(event, template) {\n    event.preventDefault();\n    const target = event.target;\n    let selectedFeatures = [];\n    let frequencyLength = allF.length;\n    selectedFeatures.push(target.feature1.value);\n    selectedFeatures.push(target.feature2.value);\n    $(\"#compareSelect\").hide();\n    $(\"#compareView\").show();\n    let compareNames = [];\n    for (let b = 0; b < frequencyLength; b++) {\n      if (selectedFeatures.includes(allF[b].feature)) {\n        compareNames.push(allF[b].name);\n      }\n    }\n    Session.set(\"compareLabels\", compareNames);\n    let compareData = generateCompareData(selectedFeatures);\n    generateScatterChart(\"#scatterChart\", compareData);\n  }\n});\n\nTemplate.compareFeatures.onRendered(function() {\n  $(\".select2\").select2({\n    minimumResultsForSearch: 2,\n    width: \"100%\",\n    placeholder: \"Select Feature\",\n    matcher: function(term, text) {\n      return text.toUpperCase().indexOf(term.toUpperCase()) == 0;\n    }\n  });\n\n  $(\".select2[name=feature1]\").on(\"change\", function(e) {\n    const thisVal = $(this).val();\n    $(\".select2[name=feature2] option\").each(function() {\n      if (thisVal == $(this).attr(\"value\")) {\n        $(this).attr(\"disabled\", \"disabled\");\n      } else {\n        $(this).removeAttr(\"disabled\");\n      }\n    });\n  });\n\n  $(\".select2[name=feature2]\").on(\"change\", function(e) {\n    const thisVal = $(this).val();\n    $(\".select2[name=feature1] option\").each(function() {\n      if (thisVal == $(this).attr(\"value\")) {\n        $(this).attr(\"disabled\", \"disabled\");\n      } else {\n        $(this).removeAttr(\"disabled\");\n      }\n    });\n  });\n});\n\nTemplate.stylometrygraph.onRendered(function() {\n  $(\".toplevel\").fadeIn(\"slow\");\n  const featureArray = Session.get(\"features\");\n  const data = Session.get(\"styloresult\");\n  const cdata = data;\n  const f1label = cdata.map(function(x) {\n    return x.name;\n  });\n  const fl = allF.length;\n\n  const generateData = (feature) => {\n    const dydata = cdata.map(function(x) {\n      return x[feature];\n    });\n    let bdata = [];\n    for (let i = 0; i < cdata.length; i++) {\n      let col = {};\n      col.label = cdata[i].name;\n      col.data = [dydata[i]];\n      col.fill = true;\n      col.borderWidth = 2;\n      col.backgroundColor = \"rgba(112,44,57,0.4)\";\n      col.borderColor = \"#702c39\";\n      bdata.push(col);\n    }\n    return bdata;\n  };\n\n  let dynamicCharts = [];\n  for (let b = 0; b < fl; b++) {\n    let ch = {};\n    if (farray.includes(allF[b].feature)) {\n      ch.data = allF[b].feature;\n      ch.title = allF[b].name;\n      dynamicCharts.push(ch);\n    }\n  }\n\n  farray.forEach(function(x) {\n    generateBarChart(\"#\" + x, f1label, generateData(x));\n  });\n\n  function generateBarChart(element, labels, data) {\n    const mychart = $(element);\n\n    const bbdata = {\n      labels: labels,\n      datasets: data\n    };\n    import(\"chart.js\").then(({default: Chart}) => {\n      new Chart(mychart, {\n        type: \"bar\",\n        data: bbdata,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [\n              {\n                barPercentage: 0.4,\n                categoryPercentage: 1\n              }\n            ],\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true\n                }\n              }\n            ]\n          },\n          legend: {\n            display: false\n          },\n          tooltips: {\n            callbacks: {\n              title: function() {}\n            }\n          }\n        }\n      });\n    });\n  }\n});\n\nTemplate.stylometrytable.onRendered(function() {\n  $(\".toplevel\").fadeIn(\"slow\");\n  const farray = Session.get(\"features\");\n  let dynamicColumns = [\n    {data: \"name\", title: \"Corpus\"},\n    {data: \"words\", title: \"Words\"},\n    {data: \"characters\", title: \"Characters\"},\n    {data: \"type\", title: \"Type\"}\n  ];\n  const fl = allF.length;\n  for (let i = 0; i < fl; i++) {\n    let col = {};\n    if (farray.includes(allF[i].feature)) {\n      col.data = allF[i].feature;\n      col.title = allF[i].name;\n      dynamicColumns.push(col);\n    }\n  }\n  const data = Session.get(\"styloresult\");\n  const cdata = data;\n  let container = document.getElementById(\"stable\");\n  import(\"../hands.js\").then(({default: Handsontable}) => {\n    let hot_init = new Handsontable(container, {\n      data: data,\n      columns: dynamicColumns,\n      rowHeaders: true,\n      fixedColumnsLeft: 2,\n      columnSorting: true,\n      stretchH: \"all\"\n    });\n  });\n});\n\nTemplate.stylometrygraph.helpers({\n  nocharts() {\n    return htmlLabels();\n  }\n});\n\nTemplate.compareFeatures.helpers({\n  comparefeatures() {\n    let col = [];\n    let frequencyLength = allF.length;\n    let carray = Session.get(\"features\");\n    for (let i = 0; i < frequencyLength; i++) {\n      let select = {};\n      if (carray.includes(allF[i].feature)) {\n        select.value = allF[i].feature;\n        select.name = allF[i].name;\n        col.push(select);\n      }\n    }\n    return col;\n  }\n});\n"]},"sourceType":"script","hash":"4b7d098d45195cf200c97937c079148a347844dc"}
